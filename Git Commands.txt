git config --global user.name "{username}" -> to configure the username, e.g. git config --global user.name "SaifAyman"

git config --global user.email "{email}" -> to configure the email

git config user.name -> show the username

git config user.email -> show the email

git config --list -> show the full configuration

git -> some info. bruh

clear -> clear command history

git init {reponame} -> make a repository

ls -> show all the components of the directory you're currently in

ls -a -> show all the components of the directory you're currently in including hidden directories

cd {reponame} -> enter the directory of the

git status -> status of the current repository

git add {entity} -> add the new entity to the staging area

git add {entity1} {entity2} {entity3} .... -> staging specified entities

git add * -> staging all entities in the repo

git commit -m "message" -> -m is to show a message of why was this commited, and commit is to make entities in the staging area ready to be pushed

git branch -> show the branch name

git log -> show the changes in the repo with details (every commit with its date, time, and code)

----> if the entities are shown green after command "git status" on git bash, it means they're on the stage

git checkout {commit code} -> undo the specified commit

git branch saif -> initialize branch named:saif

git checkout saif -> switch to branch saif

git merge {branch} -> to merge the branch with the master

git remote -v -> to check the remote connection

git remote add {repo_name} {repo_link} -> start connection

git push -u {repo_name} {branch} -> apply committed changes on the repo in github

git pull {repo_name} {branch} -> download the repo from the branch to your local pc